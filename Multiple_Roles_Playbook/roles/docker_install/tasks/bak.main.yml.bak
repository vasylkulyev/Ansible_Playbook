---
# tasks file for docker_install
- block: # Ubuntu #
    - name: Update
      apt:
        update_cache: yes

    - name: Install-packages
      apt:
        name: "{{ item.pkg }}"
        state: latest
        update_cache: yes
      with_items: '{{pkgs}}'

    - name: Add an apt signing key for Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add apt repository for stable version
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu/dists/{{ ansible_lsb.codename }}/stable/
        state: present

    - name: Install Docker
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Add user to docker group
      user:
        name: "{{ adduser_user_name }}"
        groups: docker
        append: yes

    - name: Start and enable Docker
      service:
        name: docker
        state: started
        enabled: yes

  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
  ignore_errors: yes


- block: # CentOS #
    - name: Update
      yum:
        update_cache: yes

    - name: Install pre-requisite packages
      yum:
        name: "{{item}}"
        state: latest
      loop:
          - yum-utils
          - device-mapper-persistent-data
          - lvm2

    - name: Add Docker CE repo
      get_url:
        url: https://download.docker.com/linux/centos/docker-ce.repo
        dest: /etc/yum.repos.d/docker-ce.repo

    - name: Install Docker
      package:
        name: docker-ce
        state: latest

    - name: Add user to docker group
      user:
        name: "{{ adduser_user_name }}"
        groups: docker
        append: yes

    - name: Start and enable Docker
      service:
        name: docker
        state: started
        enabled: yes

  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'
  ignore_errors: yes
